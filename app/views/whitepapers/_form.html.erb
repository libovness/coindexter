<div class="row">
  <%= form_for [@network, @whitepaper], html: { class: 'directUpload new_whitepaper', id: 'new_whitepaper', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } } do |f| %>
    <% if @whitepaper.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@whitepaper.errors.count, "error") %> prohibited this whitepaper from being saved:</h2>
        <ul>
        <% @whitepaper.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
    <div class="row">
      <div class="col-md-4 label">
        <%= f.label "Title" %>
      </div>
      <div class="col-md-8">
        <%= f.text_field :whitepaper_title %>
      </div>
    </div>
    <div class="row first-in-form_group">
      <div class="col-md-4 label">
        <%= f.label "PDF" %>s
      </div>
      <div class="col-md-8">
        <%= f.file_field :whitepaper, class: 'filestyle' %>
      </div>
    </div>
    <div class="row">
      <div class="col-md-offset-4 col-md-8">
        <p class="or">— PDF preferred. If absent, <a id="provide-url">provide a URL</a> —</p>
      </div>
    </div>
    <div class="row external-url">
      <div class="col-md-4 label">
        <%= f.label "URL" %>
      </div>
      <div class="col-md-8">
        <%= f.text_field :external_url %>
      </div>
    </div>
<!--      
    <div class="row">
      <div class="col-md-4 label">
        <%= f.label "Network" %>
      </div>
      <div class="col-md-8">
        <%#= f.collection_select :network_id, Network.all.order("name ASC").map { |n| [n.id, n.name, {'data-icon' => n.logo}, {class: 'network-option'}]}, :first, :second, @network.nil? ? {} : {selected: @network.id}, {multiple: true, size: 4, id: "link-option", :include_hidden => false} %>
      </div>
    </div>
-->
    <ul class="action-links">
      <li class="submit">
        <%= f.submit "Submit", class: "form-submit" %> 
      </li>
    </ul>
  <% end %>
</div>
<script type="text/javascript">
  $(function() {
    $('.directUpload').find("input:file").each(function(i, elem) {
      var fileInput    = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
      fileInput:       fileInput,
      url:             form.data('url'),
      type:            'POST',
      autoUpload:       true,
      formData:         form.data('form-data'),
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });
</script>